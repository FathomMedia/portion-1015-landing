"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _axios = _interopRequireDefault(require("axios"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

const useForm = ({
  portalId,
  formId
}) => {
  const [data, setData] = (0, _react.useState)();
  const [url, setUrl] = (0, _react.useState)(`https://api.hsforms.com/submissions/v3/integration/submit/${portalId}/${formId}`);
  const [form, setForm] = (0, _react.useState)(false);
  const [isLoading, setIsLoading] = (0, _react.useState)(false);
  const [isError, setIsError] = (0, _react.useState)(false);

  const fetchData = async () => {
    setIsError(false);
    setIsLoading(true);

    try {
      const formData = new FormData(form);
      const data = {
        fields: []
      };

      for (var pair of formData.entries()) {
        data.fields.push({
          name: pair[0],
          value: pair[1]
        });
      }

      const result = await (0, _axios.default)({
        method: 'post',
        url,
        data,
        headers: {
          'Content-Type': 'application/json'
        }
      });
      setData(result);
      setForm(false);
    } catch (e) {
      setIsError(true);
      setForm(false);
    }

    setIsLoading(false);
  };

  (0, _react.useEffect)(() => {
    if (form) {
      fetchData();
    }
  }, [form]);

  const handleSubmit = e => {
    e.preventDefault();
    setForm(e.target);
  };

  return {
    data,
    isLoading,
    isError,
    handleSubmit
  };
};

var _default = useForm;
exports.default = _default;